<?xml version="1.0" encoding="UTF-8"?>

<!-- Spring Native support Logback, but not configuration with logback.xml so please configure it with application.properties or application.yml for now, 
see #625 for more details. https://github.com/spring-projects-experimental/spring-native/issues/625 -->

<configuration>
	<appender name="STDOUT"
		class="ch.qos.logback.core.ConsoleAppender">
		<encoder
			class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
			<providers>
				<globalCustomFields>
					<customFields>{"event_type":"logging"}</customFields>
				</globalCustomFields>
				<nestedField>
					<fieldName>event</fieldName>
					<providers>
						<uuid>
							<fieldName>message_id</fieldName>
							<strategy>random</strategy>
						</uuid>
						<mdc />
						<context />
						<timestamp>
							<fieldName>timestamp</fieldName>
							<timeZone>UTC</timeZone>
						</timestamp>
						<!-- logLevel /> <threadName /> <loggerName /> <message/ -->
						<pattern>
							<pattern>
								{
								"level": "%level",
								"thread_name":
								"%thread",
								"logger_name":
								"%logger{39}",
								"message":
								"%message"
								}
							</pattern>
						</pattern>
					</providers>
				</nestedField>

				<logstashMarkers />
				<stackTrace />
				<stackHash />
				<arguments />
			</providers>
		</encoder>
	</appender>

	<appender name="accessLog"
		class="ch.qos.logback.core.ConsoleAppender">
		<encoder
			class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
			<jsonGeneratorDecorator
				class="net.logstash.logback.mask.MaskingJsonGeneratorDecorator">
				<defaultMask>****</defaultMask>
				<path>event/request_headers/Authorization</path>
			</jsonGeneratorDecorator>
			<providers>
				<pattern>
					<pattern>
						{
						"event_type":"access",
						"event":"#tryJson{%message}"
						}
					</pattern>
				</pattern>
			</providers>
		</encoder>
	</appender>

	<appender name="async"
		class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="accessLog" />
	</appender>

	<logger name="reactor.netty.http.server.AccessLog" level="INFO"
		additivity="false">
		<appender-ref ref="async" />
	</logger>

	<root level="INFO">
		<appender-ref ref="STDOUT" />
	</root>

</configuration>